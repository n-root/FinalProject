---
title: "EDA"
format: html
editor: visual
---

# Final Project EDA File - Natalie Root

#### Establish Libraries

```{r}
library(dplyr)
library(tidyr)
library(readr)
library(ggplot2)
library(httr)
library(jsonlite)
library(knitr)
library(rpart)
```

## Introduction Section

#### Briefly describe the data and variables
This data set is formed from the Behavioral Risk Factor Surveillance System (BRFSS) annual telephone survey from the CDC. The survey is composed of 253,680 responses regarding health related risk behaviors, chronic health conditions, and preventative service use from 2015. The following list is of the variables that will be used in this project and their meaning:

- Diabetes_binary: 0 if the respondent does not have diabetes, 1 if they are prediabetes, 2 if they have diabetes
- HighBP: 0 if the respondent does not have high BP and 1 if they do
- HighChol: 0 if the respondent does not have high cholesterol, 1 if they do
- CholCheck: 0 if the respondent has not had a cholesterol check in 5 years, 1 if they have
- BMI: The numerical value for the respondent's body mass index
- Smoker: 0 if the respondent has not smoked >= 100 in their lifetime, 1 if they have
- Stroke: 0 if the respondent has never (been told they) had a stroke, 1 if they have
- HeartDiseaseorAttack: 0 if the respondent does not have coronary heart disease or myocardial infarction, 1 if they have
- PhysActivity: 0 if the respondent has not had physical activity in the past 30 days (not including job), 1 if they have
- Fruits: 0 if the respondent does not consume fruit 1+ times per day, 1 if they have
- Veggies: 0 if the respondent does not consume vegetables 1+ times per day, 1 if they have
- HvyAlcoholConsump: 0 if the respondent is an adult male and does not consume >= 14 drinks per week or an adult woman and does not consume >= 7 drinks per week, 1 if otherwise
- AnyHealthcare: 0 if the respondent does not have any form of health care coverage, 1 if they do
- NoDocbcCost: 1 if the respondent could not see a doctor when they needed to in the past 12 months due to cost, 0 if they could
- GenHlth: 1 if the respondent says their general health is excellent, 2 if very good, 3 if good, 4 if fair, and 5 if poor
- MentHlth: The numerical value of days of poor mental health (between 1-30 days)
- PhysHlth: The numerical value of day of physical illness or injury days in the past 30 days (scale of 1-30)
- DiffWalk: 0 if the respondent does not have serious difficulty walking or climbing stairs, 1 if they do
- Sex: 0 if the respondent is female, 1 if the respondent is male
- Age: 1 if the respondent is 18-24 years of age, 2 if 25-29, 3 if 30-34, 4 if 35-39, 5 if 40-44, 6 if 45-49, 7 if 50-54, 8 if 55-59, 9 if 60-64, 10 if 65-69, 11 if 70-74, 12 if 75-79, 13 if 80+, and 99 if they do not know/refused/missing
- Education: 1 if the respondent never attended school or only kindergarten, 2 if they attended grades 1-8, 3 if they attended grades 9-11, 4 if they attended grade 12 or GED, 5 if they attended college for 1-3 years, 6 if they attended college for 4+ years, 9 if they refused to answer
- Income: 1 if the respondent's income is <$10K, 2 if $10K - <$15K, 3 if $15K - <$20K, 4 if $20K - <$25K, 5 if $25K - <$35K, 6 if $35K - <$50K, 7 if $50K - <$75K, 8 if $75K+, 77 if they do not know or are not sure, and 99 if they refused

#### Describe the purpose of the EDA and ultimate modeling goal
The purpose of our exploratory data analysis, otherwise known as EDA, is to better understand our data prior to utilizing and manipulating it. Better understanding things like the structure, patterns, and missingness of the data will allow us to better wield our data to answer any questions we may have.

## Data Section

#### Import the data

```{r}
diabetes_data <- read.csv("diabetes_binary_health_indicators_BRFSS2015.csv")
```

#### Convert variables to factors with meaningful names

```{r}
# Create a factor version of the Diabetes_binary variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the HighBP variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the HighChol variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the CholCheck variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Smoker variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Stroke variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the HeartDiseaseorAttack variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the PhysActivity variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Fruits variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Veggies variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the HvyAlcoholConsump variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the AnyHealthcare variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the NoDocbcCost variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the GenHlth variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the DiffWalk variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Sex variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Age variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Education variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

# Create a factor version of the Income variable
diabetes_data <- diabetes_data |>
  mutate(___ = as.factor(___))

```

#### Check on missingness

```{r}
sum_na <- function(col){
  sum(is.na(col))
}

diabetes_data |>
  summarize(across(everything(), sum_na))
```


## Summarizations Section

#### Produce meaningful summary statistics

#### Numeric Variable Summary

```{r}
dat |>
  summarise(across(matches("G[0-9]"), list(mean = mean, sd = sd), .names = "{.col}.{.fn}"))
```

#### Numeric Variable Summary Filtered

```{r}
dat |>
  filter(higher == "yes") |>  # or group_by(address)
  summarise(across(matches("G[0-9]"), list(mean = mean, sd = sd), .names = "{.col}.{.fn}"))
```


#### 1-Way Contingency Table

```{r}
table("internet at home?" = diabetes_data$variable)
```

#### 1-Way Contingency Table Pre-Filtered for Condition

```{r}
fil <- filter(dat, reason == "reputation")

table("internet at home?" = fil$internet,
      "address" = fil$address)
```

#### 2-Way Contingency Table

```{r}
table("internet at home?" = diabetes_data$variable,
      "address" = diabetes_data$variable)
```

#### 2-Way Contingency Table Using DPLYR

```{r}
dat |>
  group_by(reason, address) |>
  summarize(count = n()) |>
  pivot_wider(names_from = address, values_from = count)
```

#### Bar Counts for Plot

```{r}
dat_barplot <- data |>
  group_by(reason, address) |>
  summarize(count = n())
```

#### Side-by-Side Barplot

```{r}
ggplot(data = dat_barplot, aes(x = reason, y = count, fill = address)) +
  geom_bar(stat = "identity", position = "dodge") +
  xlab("Reason for choosing school") +
  ylab("Student count") +
  ggtitle("Reason for choosing school by address type") +
  scale_fill_discrete(name = "Address", labels = c("Rural", "Urban"))
```


#### What are you exploring? What do these summaries and graphs say about the relationships within the data?


## Modeling Page Link

```{r}
#[Click here for the Modeling Page](Modeling.html)
```
